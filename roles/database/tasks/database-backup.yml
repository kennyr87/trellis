- name: Check if {{ site }} folder exists
  vars:
    ansible_ssh_private_key_file: "{{ vagrant_ssh_key_file }}"
  delegate_to: vagrant
  stat:
    path: "{{ project_root }}"
  register: result

- name: Abort if {{ site }} folder doesn't exist
  fail:
    msg: "ERROR: {{ site }} is not a valid site name ({{ site }} folder does not exist)."
  when: result.stat.exists is defined and result.stat.exists == false or result.stat.isdir is defined and result.stat.isdir == false

- block:

  - name: Create databases directory if it doesn't exist
    vars:
      ansible_ssh_private_key_file: "{{ vagrant_ssh_key_file }}"
    delegate_to: vagrant
    file:
      path: "{{ project_web_dir }}/databases"
      state: directory
      mode: 0755

  - name: Export {{ env }} database
    shell: wp db export - | gzip > {{ backup_file }}
    args:
      chdir: "{{ www_project_web_dir }}"
    when: env is defined and env != "development"

  - name: Pull exported database from {{ env }} to development
    fetch:
      src: "{{ www_project_web_dir }}/{{ backup_file }}"
      dest: "{{ local_bedrock_dir }}/databases/"
      flat: yes
    when: env is defined and env != "development"

  - name: Delete exported database from {{ env }}
    file:
      path: "{{ www_project_web_dir }}/{{ backup_file }}"
      state: absent
    when: env is defined and env != "development"

  - name: Archive {{ env }} uploads directory
    archive:
      path: "{{ www_project_web_dir }}/web/app/uploads/"
      dest: "{{ www_project_web_dir }}/{{ uploads_file }}"
    when: env is defined and env != "development"

  - name: Pull exported uploads from {{ env }} to development
    fetch:
      src: "{{ www_project_web_dir }}/{{ uploads_file }}"
      dest: "{{ local_bedrock_dir }}/databases/"
      flat: yes
    when: env is defined and env != "development"

  - name: Delete archived uploads from {{ env }}
    file:
      path: "{{ www_project_web_dir }}/{{ uploads_file }}"
      state: absent
    when: env is defined and env != "development"
  when: result.stat.exists is defined and result.stat.exists and result.stat.isdir is defined and result.stat.isdir
