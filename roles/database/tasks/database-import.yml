## TODO refactor to include just database import
- name: Abort if environment variable is equal to development
  fail:
    msg: "ERROR: development is not a valid environment for this mode (you can't push from development to development)."
  when: env == "development"

- name: Check if {{ site }} folder exists
  vars:
    ansible_ssh_private_key_file: "{{ vagrant_ssh_key_file }}"
  delegate_to: vagrant
  stat:
    path: "{{ project_root }}"
  register: result

- name: Abort if {{ site }} folder doesn't exist
  fail:
    msg: "ERROR: {{ site }} is not a valid site name ({{ site }} folder does not exist)."
  when: result.stat.exists is defined and result.stat.exists == false or result.stat.isdir is defined and result.stat.isdir == false

- block:

  - name: Create databases directory if it doesn't exist
    vars:
      ansible_ssh_private_key_file: "{{ vagrant_ssh_key_file }}"
    delegate_to: vagrant
    file:
      path: "{{ project_web_dir }}/databases"
      state: directory
      mode: 0755

  - name: Create database dump on development
    vars:
      ansible_ssh_private_key_file: "{{ vagrant_ssh_key_file }}"
    delegate_to: vagrant 
    shell: wp db export --allow-root - | gzip > {{ dump_file }}
    args:
      chdir: "{{ project_web_dir }}"

  - name: Push database dump from development to {{ env }}
    copy:
      src: "{{ local_bedrock_dir }}/{{ dump_file }}"
      dest: "{{ www_project_web_dir }}/{{ dump_file }}"

  - name: Delete database dump from development
    vars:
      ansible_ssh_private_key_file: "{{ vagrant_ssh_key_file }}"
    delegate_to: vagrant
    shell: rm -f {{ dump_file }}
    args:
      chdir: "{{ project_web_dir }}"
      warn: false

  - name: Export {{ env }} database before importing dump (backup)
    shell: wp db export - | gzip > {{ backup_file }}
    args:
      chdir: "{{ www_project_web_dir }}"

  - name: Pull exported database from {{ env }} to development (backup)
    fetch:
      src: "{{ www_project_web_dir }}/{{ backup_file }}"
      dest: "{{ local_bedrock_dir }}/databases/"
      flat: yes

  - name: Delete exported database from {{ env }} (backup)
    shell: rm -f {{ backup_file }}
    args:
      chdir: "{{ www_project_web_dir }}"
      warn: false

  - name: Import database dump on {{ env }}
    shell: gzip -c -d {{ dump_file }} | wp db import -
    args:
      chdir: "{{ www_project_web_dir }}"

  - name: Delete database dump from {{ env }}
    shell: rm -f {{ dump_file }}
    args:
      chdir: "{{ www_project_web_dir }}"
      warn: false

  - name: Search for {{ url_from }} and replace with {{ url_to }} on development
    command: wp search-replace '//{{ url_from }}' '//{{ url_to }}' --allow-root --all-tables
    args:
      chdir: "{{ www_project_web_dir }}"
    tags: ['search-replace']
  when: result.stat.exists is defined and result.stat.exists and result.stat.isdir is defined and result.stat.isdir
